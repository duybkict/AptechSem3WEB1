@using MvcAssignment.Linq

/**
 * Generate a html list element of an specific category with state based on current filter state.
 */
@helper CategoryListItem(Category category, String currentState) {
	String currentBinState = "";
	try {
		currentBinState = Convert.ToString(Convert.ToInt32(currentState.ToString(), 16), 2).PadLeft(64, '0');
	} catch (Exception) {
		currentBinState = "".PadLeft(64, '0');
	}
	int currentCatState = currentBinState[currentBinState.Length - category.id] - 48;

	int newCatState = (currentCatState == 1) ? 0 : 1;
	String newBinState = currentBinState.Substring(0, currentBinState.Length - category.id) + newCatState + currentBinState.Substring(currentBinState.Length - category.id + 1);
	String newState = Convert.ToString(Convert.ToInt32(newBinState, 2), 16);
	
	if (currentCatState == 1) {
		<li class="active"><a href="/Products/Index?filter=@newState">@category.name</a></li>
	} else {
		<li><a href="/Products/Index?filter=@newState">@category.name</a></li>
	}
}

@helper ProductsPageTitle(String categoryParentAlias, Dictionary<CategoryParent, List<Category>> categoryTree, String currentState) {
	String currentBinState = "";
	try {
		currentBinState = Convert.ToString(Convert.ToInt32(currentState.ToString(), 16), 2).PadLeft(64, '0');
	} catch (Exception) {
		currentBinState = "".PadLeft(64, '0');
	}
	
	String title = "";	
	int index = 1;
	
	foreach (var catParent in categoryTree.Keys) {
		foreach (var category in categoryTree[catParent]) {
			if (category.CategoryParent.alias.Equals(categoryParentAlias) 
				&& currentBinState[currentBinState.Length - index] == '1') {
				title += " " + category.name + " &";
			}
			index++;
		}
	}
	
	if (title.Equals("")) {
		title = "Products";
	} else {
		title = title.Remove(title.Length - 1).Trim();
	}
	
	<h1>@title</h1>
	
}